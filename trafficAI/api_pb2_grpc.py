# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api_pb2 as api__pb2


class GreeterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.sayHello = channel.unary_unary(
                '/trafficAI.Greeter/sayHello',
                request_serializer=api__pb2.HelloRequest.SerializeToString,
                response_deserializer=api__pb2.HelloReply.FromString,
                )
        self.sendImage = channel.unary_unary(
                '/trafficAI.Greeter/sendImage',
                request_serializer=api__pb2.ImageRequest.SerializeToString,
                response_deserializer=api__pb2.ImageReply.FromString,
                )
        self.sendVideo = channel.unary_unary(
                '/trafficAI.Greeter/sendVideo',
                request_serializer=api__pb2.VideoRequest.SerializeToString,
                response_deserializer=api__pb2.VideoReply.FromString,
                )


class GreeterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def sayHello(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'sayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.sayHello,
                    request_deserializer=api__pb2.HelloRequest.FromString,
                    response_serializer=api__pb2.HelloReply.SerializeToString,
            ),
            'sendImage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendImage,
                    request_deserializer=api__pb2.ImageRequest.FromString,
                    response_serializer=api__pb2.ImageReply.SerializeToString,
            ),
            'sendVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.sendVideo,
                    request_deserializer=api__pb2.VideoRequest.FromString,
                    response_serializer=api__pb2.VideoReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'trafficAI.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def sayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trafficAI.Greeter/sayHello',
            api__pb2.HelloRequest.SerializeToString,
            api__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trafficAI.Greeter/sendImage',
            api__pb2.ImageRequest.SerializeToString,
            api__pb2.ImageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trafficAI.Greeter/sendVideo',
            api__pb2.VideoRequest.SerializeToString,
            api__pb2.VideoReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
